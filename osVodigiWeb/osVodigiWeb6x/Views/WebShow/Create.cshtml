@model osVodigiWeb6x.Models.WebShow

@{
    ViewBag.Title = "Create";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script type="text/javascript" lang="javascript">
    $(function () {
        $("input:text:visible:first").focus();
        BuildLstWebShowURLAddress();
        BuildLstURLAddress(); 
    });
    function BuildLstWebShowURLAddress() {
        
        var webShowUrlAddressSources = $("#txtWebShowURLAddressSources").val().split("{|}");
        var zooms = $("#txtWebShowURLAddressZooms").val().split("{|}"); 
        if (webShowUrlAddressSources != null) {
            $('#lstWebShowURLAddress option').each(function (i) { 
                $(this).attr("source", webShowUrlAddressSources[i+1]);
            });
        }
        if (zooms != null) {
            $('#lstWebShowURLAddress option').each(function (i) {
                $(this).attr("zoom", zooms[i+1]);
            });
        } 
        var firstOption = $("#lstWebShowURLAddress option:first");
        firstOption.prop("selected", true);
        $("#URLWebShowPreview").attr("href", firstOption.attr("source"));
        $("#URLWebShowPreview").text(firstOption.attr("source"));
        $("#webShowURLAddressZoomInput").val(firstOption.attr("zoom"));
        

    }
    function BuildLstURLAddress() {
        var urlAddressSources = $("#txtURLAddressSources").val().split("{|}"); 
        if (urlAddressSources != null) {
            $('#lstURLAddress option').each(function (i) { 
                $(this).attr("source", urlAddressSources[i+1]);
            });
        }
        var firstOption = $("#lstURLAddress option:first");
        firstOption.prop("selected", true);
       
        $("#URLAddressView").attr("href", firstOption.attr("source"));
        $("#URLAddressView").text(firstOption.attr("source"));
        
    }
    function ShowView() {
        var urlAddressSource = $("#lstURLAddress option:selected").attr("source"); 
        $("#URLAddressView").attr("href", urlAddressSource);
        $("#URLAddressView").text(urlAddressSource);
    }
    function ShowWebShowView() {
        $("#URLWebShowPreview").show();
        var urlAddressSource = $("#lstWebShowURLAddress option:selected").attr("source"); 
        var selectedZoom = $("#lstWebShowURLAddress option:selected").attr("zoom");
        $("#URLWebShowPreview").attr("href", urlAddressSource);
        $("#URLWebShowPreview").text(urlAddressSource);
        $("#webShowURLAddressZoomInput").val(selectedZoom);
        $("#webShowURLAddressZoomInput").prop("disabled", false);
    } 
    function AddToWebShow() {
        var selectedOptions = $("#lstURLAddress option:selected");
        selectedOptions.each(function (index) {
            var urlAddressName = $(this).text();
            var urlAddressID = $(this).val()
            if (urlAddressName != "" && urlAddressID != "") {
                var option = new Option(urlAddressName, urlAddressID, false, false);
                option.setAttribute("zoom", $("#urlAddressZoomInput").val());
                option.setAttribute("source", $(this).attr("source"));
                $('#lstWebShowURLAddress').append(option);
                PopulateurlAddressesStore();
            }
        });
    }
    function RemoveFromWebShow() {
        $("#lstWebShowURLAddress option:selected").remove();
        PopulateurlAddressesStore();
    }
    function MoveItemUp() {
        $('#lstWebShowURLAddress option:selected').each(function () {
            $(this).insertBefore($(this).prev());
        });
        PopulateurlAddressesStore();
    }
    function MoveItemDown() {
        $('#lstWebShowURLAddress option:selected').each(function () {
            $(this).insertAfter($(this).next());
        });
        PopulateurlAddressesStore();
    }
    function PopulateurlAddressesStore() {
        var urlAddresses = '';
        var zooms = "";
        var sources = "";
        $('#lstWebShowURLAddress > option').each(function () {
            urlAddressId = $(this).val();
            zoom = $(this).attr("zoom");
            source = $(this).attr("source");
            urlAddresses += '{|}' + urlAddressId;
            zooms += '{|}' + zoom;
            sources += '{|}' + source;  
        });
        
        $('#txtWebShowURLAddresses').attr("value", urlAddresses); 
        $('#txtWebShowURLAddressZooms').attr("value", zooms);
        $('#txtWebShowURLAddressSources').attr("value", sources);
     }
    function urlAddressZoomControl() {
        var checked = $("#urlAddressZoomCheck").is(":checked");
        if (checked) {
            $("#urlAddressZoomInput").prop('disabled', true); 
        }
        else {
            $("#urlAddressZoomInput").prop('disabled', false); 
        }
    }
    function webShowURLAddressZoomInputChange() {
        var selectedOptions = $("#lstWebShowURLAddress option:selected"); 
        var zoom = $("#webShowURLAddressZoomInput").val();
        zoom = zoom.replace(",", ".");

        if (!Number.isNaN(Number(zoom))) {
            selectedOptions.attr("zoom", zoom);
            PopulateurlAddressesStore();
        }
        else {
            selectedOptions.attr("zoom", 1);
            PopulateurlAddressesStore();
        }
    }
</script>

<br />
<div class="textblock">
    <table class="instructions">
        <tr>
            <td style="width:100px;"><img src="~/Images/webshow-icon.png" alt="" style="border-radius:8px 8px;width:70px;height:70px;" /></td>
            <td>
                <span class="paragraphheader">Add Web Show</span><br />
                <span class="paragraphtext">Please enter the appropriate information to add a new web show.</span>
            </td>
        </tr>
    </table>
</div>
<br />
@using (Html.BeginForm())
{

    <table class="formtable" style="border-spacing:0;border-collapse:collapse;" role="presentation">
        <tr>
            <td class="formheader" colspan="2">Add Web Show</td>
        </tr>
        <tr>
            <td class="formprimary"><b>Web Show Name: <span class="required">*</span></b></td>
            <td class="formprimary">
                @Html.TextBoxFor(model => model.WebShowName, new { @style = "width:300px;", maxlength = 128 })
            </td>
        </tr>
        <tr>
            <td class="formsecondary"><b>Tags: </b></td>
            <td class="formsecondary">
                @Html.TextBoxFor(model => model.Tags, new { @style = "width:300px;", maxlength = 128 })
            </td>
        </tr>
        <tr>
            <td class="formprimary"><b>Interval in Seconds: <span class="required">*</span></b></td>
            <td class="formprimary">
                @Html.TextBoxFor(model => model.IntervalInSecs, new { @style = "width:300px;", maxlength = 128 })
            </td>
        </tr>
        <tr>
            <td class="formsecondary"><b>Active: </b></td>
            <td class="formsecondary">
                @Html.EditorFor(model => model.IsActive)
            </td>
        </tr>
        <tr>
            <td class="formprimary" style="vertical-align: top;height:525px;">
                <b>Available URL Addresses</b><br /><br />
                <div>
                    @Html.DropDownList("lstURLAddress", (SelectList)ViewData["URLAddressList"], new { @style = "width:320px", @multiple = "true", onchange = "ShowView();", size = 10 })
                </div>
                <div>
                    <div class="button" style="display:inline-block; background-color:dimgrey;  ">
                        <span>Zoom :</span>
                        <input id="urlAddressZoomInput" value="1" disabled type="text" style=" height:10px; width:30px;text-align:center" maxlength="5" />
                        <input id="urlAddressZoomCheck" onchange="urlAddressZoomControl();" style="vertical-align:middle;margin:0px;" type="checkbox" checked />
                    </div>

                    <button style=" " class="button" type="button" onclick="AddToWebShow();">Add-></button>
                </div>
                <br /><br />
                <a id="URLAddressView" target="_blank" style="display: inline-block;word-wrap:break-word;width:300px;" href="#"> </a>
            </td>
            <td class="formprimary" style="vertical-align: top;height:525px;">
                <b>Web Show URL Addresses</b><br />  <br />
                <div>
                    @Html.DropDownList("lstWebShowURLAddress", ((SelectList)ViewData["WebShowURLAddressList"]), new { @style = "width:320px;", @multiple = "true", onchange = @"ShowWebShowView();", size = 10 })
                </div>
                <button class="button" style="background-color:red;" type="button" onclick="RemoveFromWebShow();">Remove</button>
                <button class="button" type="button" onclick="MoveItemUp();">Move Up</button>
                <button class="button" type="button" onclick="MoveItemDown();">Move Down</button>
                <div class="button" style="display:inline-block; background-color:dimgrey;   ">
                    <span>Zoom :</span>
                    <input id="webShowURLAddressZoomInput" onchange="webShowURLAddressZoomInputChange();"   type="text" style=" height:10px; width:30px;text-align:center" maxlength="5" />
                </div>
                <br /><br />
                <a id="URLWebShowPreview" target="_blank"  style="display: inline-block;word-wrap:break-word;width:300px;" href="#"> </a>
            </td>
        </tr>
        <tr>
            <td class="formfooter" colspan="2"><div id="returnlink"><input type="submit" value="Save" style="width:75px;" />@Html.ActionLink("Back to List", "Index")</div></td>
        </tr>
    </table>
    <div class="formfootnote"><span class="required">*</span> indicates a required field.</div>
    <br />
    <div class="errormessage">@Html.Raw((string)ViewData["ValidationMessage"])</div>
    @Html.Hidden("txtWebShowURLAddresses", ViewData["WebShowURLAddresses"])
    @Html.Hidden("txtURLAddressSources", ViewData["URLAddressSources"].ToString())
    @Html.Hidden("txtWebShowURLAddressSources", ViewData["WebShowURLAddressSources"])
    @Html.Hidden("txtWebShowURLAddressZooms", ViewData["WebShowURLAddressZooms"])
    
}

<script type="text/javascript" lang="javascript">
    // Only allow 0-9 in the Interval field
    $('#IntervalInSecs').keyup(function (event) {
        this.value = this.value.replace(/[^0-9\.]/g, '');
    });
</script>

<br /><br />

